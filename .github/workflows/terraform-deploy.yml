
name: 'Terraform Deploy'
on:
  push:
    branches:
      - main
    paths:
      - 'terraform-live/**'
      - 'terraform-modules/**'
      - 'policies/**'
      - '.github/workflows/**'
  workflow_dispatch:
  pull_request:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  audit:
    name: "Audit"
    permissions:
      contents: read
      pull-requests: write
    uses: leomozzer/terraform-template/.github/workflows/audit.yml@main
    with:
      TERRAFORM_WORKING_DIR: "terraform-live"
    secrets:
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}

  plan:
    name: "Terraform"
    needs: audit
    strategy:
      matrix:
        stage: [dev]
    concurrency: ${{ matrix.stage }}
    # steps:
    # - uses: actions/checkout@v3

    # - uses: jungwinter/split@v2
    #   id: split
    #   with:
    #     msg: ${{ github.repository }}
    #     separator: "/"
    uses: leomozzer/terraform-template/.github/workflows/terraform-plan.yml@main
    with:
      TERRAFORM_WORKING_DIR: "terraform-live"
      TERRAFORM_MODULES_DIR: "terraform-modules"
      WORKING_DIR: "./"
      RESOURCE_GROUP_NAME: "policy-as-code-tfstate-${{ matrix.stage }}-rg"
      RESOURCE_GROUP_LOCATION: "eastus"
      STORAGE_ACCOUNT_NAME: "stacpolicyascode${{ matrix.stage }}"
      CONTAINER_NAME: "states"
      STATE_FILE: "policy-as-code.tfstate"
      STAGE: ${{ matrix.stage }}
      TAGS: '"UseCase=Terraform" "Environment=${{ matrix.stage }}" "Deployed=GitHub Actions" Repository="https://github.com/leomozzer/policy-as-code""RunNumber=${{ github.run_number }}"'
    secrets:
      AZURE_SP: ${{ secrets.AZURE_SP }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    # steps:
    # - uses: actions/checkout@v3

    # - uses: jungwinter/split@v2
    #   id: split
    #   with:
    #     msg: ${{ github.repository }}
    #     separator: "/"

    # - uses: "./.github/actions/azure-backend"
    #   with:
    #     AZURE_SP: ${{ secrets.AZURE_SP }}
    #     RESOURCE_GROUP_NAME: "policy-as-code-tfstate-${{ matrix.stage }}-rg"
    #     RESOURCE_GROUP_LOCATION: "eastus"
    #     TAGS: '"UseCase=Terraform" "Stage=${{ github.job }}" "Deployed=GitHub Actions" Repository=${{ steps.split.outputs._1 }} "RunNumber=${{ github.run_number }}"'
    #     STORAGE_ACCOUNT_NAME: "stacpolicyascode${{ matrix.stage }}"

    # - uses: "./.github/actions/terraform-plan"
    #   with:
    #     WORKING_DIR: "."
    #     AZURE_SP: ${{ secrets.AZURE_SP }}
    #     RESOURCE_GROUP_NAME: "policy-as-code-tfstate-${{ matrix.stage }}-rg"
    #     STORAGE_ACCOUNT_NAME: "stacpolicyascode${{ matrix.stage }}"
    #     CONTAINER_NAME: "states"
    #     STATE_FILE: "policy-as-code.tfstate"
    #     STAGE: "${{ matrix.stage }}"

  apply:
    name: "Apply Job"
    needs: plan
    strategy:
      matrix:
        stage: [dev]
    runs-on: ubuntu-latest
    environment: ${{ matrix.stage }}
    defaults:
     run:
       shell: bash
       # We keep Terraform files in the terraform directory.
       working-directory: ./terraform-live
    steps:
    - uses: actions/checkout@v3

    - uses: "./.github/actions/terraform-apply"
      with:
        WORKING_DIR: "."
        AZURE_SP: ${{ secrets.AZURE_SP }}
        STORAGE_ACCOUNT_NAME: "stacpolicyascode${{ matrix.stage }}"
        STAGE: "${{ matrix.stage }}"