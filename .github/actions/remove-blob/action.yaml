name: 'Remove old plans'
description: "Remove old file plans from storage account"

inputs:
  AZURE_CLI_VERSION:
    description: "Azure cli version"
    required: false
    default: 'latest'
  AZURE_SP:
    description: "Credentials of the Azure SP"
    required: true
  STORAGE_ACCOUNT_NAME:
    description: "Name of the storage account"
    required: true
  STAGE:
    description: "Deployment stage"
    required: true

runs:
  using: "composite"
  steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ inputs.AZURE_SP }}

    - name: Check old terraform-live files
      uses: azure/CLI@v1
      shell: "pwsh"
      with:
        azcliversion: ${{ inputs.AZURE_CLI_VERSION }}
        inlineScript: |
          $oldFileNumber = ${{ github.run_number }} - 1
          $fileName = "$(terraform-live-$oldFileNumber.tar)"
          $liveExists = az storage blob exists --account-name ${{ inputs.STORAGE_ACCOUNT_NAME }} --container-name plans --name $fileName | ConvertFrom-Json
          if($liveExists){
            az storage blob delete --account-name ${{ inputs.STORAGE_ACCOUNT_NAME }} --container-name plans --name $fileName
          }
    
    - name: Check old terraform-modules files
      uses: azure/CLI@v1
      shell: "pwsh"
      with:
        azcliversion: ${{ inputs.AZURE_CLI_VERSION }}
        inlineScript: |
          $oldFileNumber = ${{ github.run_number }} - 1
          $fileName = "$(terraform-modules-$oldFileNumber.tar)"
          $liveExists = az storage blob exists --account-name ${{ inputs.STORAGE_ACCOUNT_NAME }} --container-name plans --name $fileName | ConvertFrom-Json
          if($liveExists){
            az storage blob delete --account-name ${{ inputs.STORAGE_ACCOUNT_NAME }} --container-name plans --name $fileName
          }